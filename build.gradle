buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.flywaydb.flyway' version '8.5.10'
	id 'java'
}

group = 'org.daming'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

	implementation 'org.postgresql:postgresql:42.3.5'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    // Runtime, com.sun.xml.bind module
	implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.yaml:snakeyaml:1.30'
	implementation 'org.flywaydb:flyway-core:8.5.10'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

flyway {
	url = 'jdbc:postgresql://127.0.0.1:5432/hoteler'
	user = 'postgres'
	password = '123456'
}

test {
	useJUnitPlatform()
}

bootJar {
	mainClass = 'org.daming.hoteler.HotelerApplication'
}

jar {
	// https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.and-plain-archives
	enabled = false
}

if (project.hasProperty('standalone')) {
	sourceSets {
		main {
			resources {
				exclude '**/application*.yml'
				exclude '**/*.yml.back'
			}
		}
	}
	bootJar {
		archiveName = "hoteler-standalone.jar"
		mainClass = 'org.daming.hoteler.HotelerApplication'
	}
}